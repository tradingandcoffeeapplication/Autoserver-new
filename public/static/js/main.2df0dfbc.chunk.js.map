{"version":3,"sources":["components/PositionsTable.js","components/NewPositionModal.js","components/AdminUsersTable.js","components/AdminEmailsTable.js","components/AdminPositionsTable.js","components/AdminPositionsControl.js","components/AdminPanel.js","assets/ring.mp3","components/HomePage.js","components/Login.js","components/Register.js","components/Contact.js","components/Payment.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","container","maxHeight","StickyHeadTable","props","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","positions","setPositions","columns","id","label","minWidth","createData","Num","Symbol","Operation","StartDate","EndDate","StartPrice","EndPrice","succeeded","PipsesCents","Precent","addSuccessRate","arr","arrays","ratesArray","i","length","push","slice","forEach","chunk","filter","item","unClosedPositions","map","rate","toFixed","array","idx","unshift","flat","getUserData","a","axios","get","details","data","email","userPositions","finalPositions","bonds","bond","crypto","comodity","pairs","currencyPair","rest","stocks","stock","sortedPositions","sort","b","insertTime","rows","openPositionsEndDates","undefined","pipsed","endDate","symbol","operation","startDate","startPrice","endPrice","String","passEndDates","finalArray","useEffect","reRender","Paper","className","style","paddingTop","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","align","textAlign","backgroundColor","TableBody","row","hover","role","tabIndex","value","fontSize","height","borderBottom","format","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","target","Button","onClick","PdfArray","variant","color","position","left","bottom","theme","display","flexWrap","formControl","margin","spacing","DialogSelect","open","setOpen","type","setType","amount","setAmount","stockValue","setstockValue","stocksFlag","setStocksFlag","forexFlag","setForexFlag","handleClose","weekday","Intl","DateTimeFormat","timeZone","Date","formatter","hour","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","FormControl","InputLabel","htmlFor","Select","native","onChange","handleTypeChange","input","Input","labelId","handleAmountChange","MenuItem","handleStockValueChange","DialogActions","handleStartTimer","closeModalAndStartTimer","AdminUsersTable","users","setUsers","usersRows","setusersRows","changeUserCredits","post","alert","fNameChanged","firstName","toLowerCase","includes","_id","lastName","phone","created_at","credits","lNameChanged","emailChanged","dateChanged","date","phoneChanged","deleteUser","console","log","delete","window","location","reload","resUsers","top","right","marginLeft","marginRight","TextField","userId","placeholder","InputLabelProps","shrink","code","AdminEmailTable","emails","setEmails","useRowStyles","Row","Fragment","IconButton","size","scope","fullName","deleteMessage","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","Box","Typography","gutterBottom","message","resEmails","name","currentPageData","deleteWholePage","AdminPositionsTable","positionType","setRows","precent","enrichedRows","object","finalRows","TabPanel","children","index","other","hidden","aria-labelledby","p","a11yProps","flexGrow","palette","background","paper","AdminPositionsControl","setValue","AppBar","Tabs","newValue","Tab","AdminPanel","view","setView","handleViewChange","getBreakPoint","windowWidth","title","HomePage","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","userFirstName","setUserFirstName","userPremission","setUserPremission","userCredits","setUserCredits","userEmail","setUserEmail","newPositionsType","setNewPositionsType","newPositionsAmount","setNewPositionsAmount","newStocksRate","setNewStocksRate","reRenderTable","setReRenderTable","relativeEndDate","setRelativeEndDate","history","useHistory","isWindowClient","innerWidth","windowSize","setWindowSize","setSize","addEventListener","removeEventListener","audio","Audio","ring","HandleLogout","useRef","e","addNewCrypto","getNewCryptos","addNewBonds","getNewBonds","addNewRest","getNewRest","addNewComodity","getNewComodity","addNewPairs","getNewPairs","addNewStocks","getNewStocks","TimerValidation","localStorage","setItem","startTimer","updatedCredits","Number","timeNowMinutes","toLocaleTimeString","minute","timeNowSeconds","second","TimerHandler","Interval","setInterval","clearInterval","removeItem","play","handleReRenderTable","setTimeout","downloadPdf","positionsArray","userDetails","isAdmin","StorageTimer","getItem","then","minutes","pairsSymbols","zIndex","Toolbar","Grid","alignItems","justify","xs","sm","to","textDecoration","src","endDatesArray","options","day","month","year","today","replace","validEndDatesArray","sortedValidDates","relativeDates","getEndDateData","Copyright","Link","href","getFullYear","marginTop","flexDirection","avatar","secondary","main","form","submit","Login","userName","setUserName","password","setPassword","HandleLogin","username","Container","maxWidth","CssBaseline","Avatar","noValidate","required","fullWidth","autoComplete","autoFocus","Register","setFirstName","setlastName","setEmail","checkBox","setCheckBox","phoneNumber","setPhoneNumber","confirmPass","setConfirmPass","emailFlag","setEmailFlag","HandleRegister","signup","created","country","FormControlLabel","control","Checkbox","lg","fontWeight","Index","ContactPage","setfullName","setMessage","sendEmail","direction","marginBottom","handleNameChange","handleEmailChange","multiline","handleMessageChange","rel","alt","float","Paypal","paypal","setUserDetails","Buttons","createOrder","actions","err","order","create","intent","purchase_units","description","currency_code","onApprove","checkCredits","onError","render","current","ref","App","path","Contact","Payment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2df0dfbc.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './PositionsTable.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({ //יצירת סטיילינג\r\n  root: { //דיב רוט \r\n    width: '100%',\r\n  },\r\n  container: { // דיב חיצוני ביותר\r\n    maxHeight: 800,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable(props) { //הפונקציה של הטבלה\r\n  const classes = useStyles(); //שימוש בסטיילינג לפי קלאסים\r\n  const [page, setPage] = React.useState(0); //סטייט של הפאג'ינציה (עמודים)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(11); //כמות שורות פר עמוד\r\n  const [positions, setPositions] = React.useState([]);\r\n\r\n\r\n  const columns = [  // עמודות לטבלה הראשית\r\n    {\r\n      id: 'Num',\r\n      label: 'Num',\r\n      minWidth: 50\r\n    },\r\n    {\r\n      id: 'Symbol',\r\n      label: 'Symbol',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'Operation',\r\n      label: 'Operation',\r\n      minWidth: 50\r\n    },\r\n    {\r\n      id: 'StartDate',\r\n      label: 'Start Date',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'EndDate',\r\n      label: 'End Date',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'StartPrice',\r\n      label: 'Start Price',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'EndPrice',\r\n      label: 'End Price',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'succeeded',\r\n      label: 'Succeeded',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'PipsesCents',\r\n      label: 'Pipses/Cents',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'Precent',\r\n      label: 'Success rate (per page)',\r\n      minWidth: 50,\r\n    },\r\n  ];\r\n\r\n  function createData( //פונקציה המייצרת דאטא חדש לטבלה\r\n    Num,\r\n    Symbol,\r\n    Operation,\r\n    StartDate,\r\n    EndDate,\r\n    StartPrice,\r\n    EndPrice,\r\n    succeeded,\r\n    PipsesCents,\r\n    Precent\r\n  ) {\r\n    return { Num, Symbol, Operation, StartDate, EndDate, StartPrice, EndPrice, succeeded, PipsesCents, Precent };\r\n  }\r\n\r\n\r\n  const handleChangePage = (event, newPage) => { //פונקציה לשינוי עמוד\r\n    setPage(newPage); //שינוי הסטייט לעמוד חדש\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => { //אפשרות למשתמש לשנות את מספר השורות בעמוד (כרגע מבוטל)\r\n    setRowsPerPage(+event.target.value); //המספר שהמשתמש בחר\r\n    setPage(0);\r\n  };\r\n\r\n  // פונקציה שמוסיפה אחוזי הצלחה בראש כל עמוד + משנה ערכים שהם אנדיפיינד\r\n  const addSuccessRate = (arr) => {\r\n    let arrays = [];\r\n    const size = 10;\r\n    let ratesArray = [];\r\n    // חותך את המערך לצ'אנקים של 10 או פחות\r\n    for (let i = 0; i < arr.length; i += size) {\r\n      arrays.push(arr.slice(i, i + size));\r\n    }\r\n    //לולאת פור איצ\r\n    arrays.forEach(chunk => {\r\n      //מוצא את מספר הפוזיציות שהצליחו\r\n      let succeeded = chunk.filter(item => item.succeeded === 'true').length;\r\n      // מוצא את מספר הפוזיציות שעדיין לא נסגרו\r\n      let unClosedPositions = 0;\r\n      chunk.map((item) => {\r\n        if (item.succeeded === 'undefined') { //במידה וסוקסידד אנדיפיינד\r\n          item.succeeded = 'Position is open'\r\n          unClosedPositions++; // לא סופר פוזיציות פתוחות בחישוב האחוזים\r\n        };\r\n        if (!item.EndPrice) { // במידה ואין מחיר סגירה\r\n          item.EndPrice = 'Position is open'\r\n        }\r\n        if (!item.PipsesCents) { // במידה ואין פיפסים\r\n          item.PipsesCents = 'Position is open'\r\n        }\r\n      });\r\n      // מוצא את אחוזי ההצלחה לפי החישוב הבא: מספר הפוזיציות שהצליחו לחלק לגודל הצ'אנק פחות מספר הפוזיציות שלא נסגרו\r\n      let rate = (succeeded / (chunk.length - unClosedPositions)) * 100;\r\n      rate = rate.toFixed() + '%';\r\n      if (rate === 'NaN%') {\r\n        rate = '0%'\r\n      };\r\n      ratesArray.push(rate);\r\n    });\r\n    arrays.map((array, idx) => array.unshift(createData('', '', '', '', '', '', '', '', '', ratesArray[idx]))); //הכנסה של עמודת אחוזים לטבלה\r\n    return arrays.flat()\r\n  }\r\n\r\n  //פונקציה שמביאה את כל הפוזיציות והמידע של המשתמש\r\n  const getUserData = async () => {\r\n    const details = await axios.get('/auth/userDetails'); // API שמביא דאטא על המשתמש\r\n    const userPositions = await axios.get(`/positions/getUserPositions/${details.data.email}`); // API שמביא את הפוזיציות של המשתמש\r\n    let finalPositions = [];\r\n    for (let i = 0; i < userPositions.data[0].bonds.length; i++) {\r\n      const bond = await axios.get(`positions/getbond/${userPositions.data[0].bonds[i]}`); // כל הבונדים של המשתמש\r\n      finalPositions.push(bond.data[0]);\r\n    }\r\n    for (let i = 0; i < userPositions.data[0].crypto.length; i++) {\r\n      const crypto = await axios.get(`positions/getCrypto/${userPositions.data[0].crypto[i]}`); // כל הקריפטו של המשתמש\r\n      finalPositions.push(crypto.data[0]);\r\n    }\r\n    for (let i = 0; i < userPositions.data[0].comodity.length; i++) {\r\n      const comodity = await axios.get(`positions/getComodity/${userPositions.data[0].comodity[i]}`); // כל הקומודיטי של המשתמש\r\n      finalPositions.push(comodity.data[0]);\r\n    }\r\n    for (let i = 0; i < userPositions.data[0].pairs.length; i++) {\r\n      const currencyPair = await axios.get(`positions/getCurrencyPair/${userPositions.data[0].pairs[i]}`); // כל הקורנסי של המשתמש\r\n      finalPositions.push(currencyPair.data[0]);\r\n    }\r\n    for (let i = 0; i < userPositions.data[0].rest.length; i++) {\r\n      const rest = await axios.get(`positions/getRest/${userPositions.data[0].rest[i]}`); // כל הרסט של המשתמש\r\n      finalPositions.push(rest.data[0]);\r\n    }\r\n    for (let i = 0; i < userPositions.data[0].stocks.length; i++) {\r\n      const stock = await axios.get(`positions/getStock/${userPositions.data[0].stocks[i]}`); // כל הסטוקס של המשתמש\r\n      finalPositions.push(stock.data[0]);\r\n    }\r\n\r\n    const sortedPositions = finalPositions.sort((a, b) => { // מסדר את הפוזיציות \r\n      return b.insertTime - a.insertTime;\r\n    });\r\n\r\n    let rows = [];\r\n    let openPositionsEndDates = []\r\n    for (let i = 0; i < sortedPositions.length; i++) { // לולאת פור על כל הפוזיציות של המשתמש\r\n      if (sortedPositions[i].pipsed !== undefined) { //במידה ויש לפוזיציה פיפסים\r\n        sortedPositions[i].pipsed = sortedPositions[i].pipsed.toFixed(3); // מסדר את הפיפסים רק ל3 מספרים אחרי הנקודה\r\n      };\r\n      if (sortedPositions[i].succeeded === undefined) { //במידה והפוזיציה פתוחה\r\n        openPositionsEndDates.push(sortedPositions[i].endDate); // דוחף למערך את תאריך הסגירה של הפוזיציה\r\n      }\r\n      rows.push(createData( // מכין את כל הפוזיציות לטבלה\r\n        i + 1,\r\n        sortedPositions[i].symbol,\r\n        sortedPositions[i].operation,\r\n        sortedPositions[i].startDate,\r\n        sortedPositions[i].endDate,\r\n        sortedPositions[i].startPrice,\r\n        sortedPositions[i].endPrice,\r\n        String(sortedPositions[i].succeeded),\r\n        sortedPositions[i].pipsed,\r\n        sortedPositions[i].Precent\r\n      ))\r\n    };\r\n    props.passEndDates(openPositionsEndDates); // מעביר תאריכים של כל הפוזיציות הפתוחות לקומפוננטה הראשית\r\n    const finalArray = addSuccessRate(rows); // מוסיף אחוזי הצלחה לטבלה\r\n    setPositions(finalArray); // קריאה לפונקציה שמכניסה את הערכים לטבלה\r\n  }\r\n\r\n  //קיראה לפונקציה שמביאה את כל המידע על המשתמש כשהדף עולה\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, [])\r\n\r\n  //קריאה לקומפוננטה הראשית שצריך לרנדר את הטבלה מחדש\r\n  useEffect(() => {\r\n    if (props.reRender === true) {\r\n      getUserData();\r\n    }\r\n  }, [props.reRender]);\r\n\r\n  return (\r\n    <Paper className={classes.root} style={{ paddingTop: '20px' }}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column, idx) => ( //מאפינג לעמודות\r\n                <TableCell\r\n                  key={idx} //מזהה\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, textAlign: 'center', backgroundColor: 'lightBlue' }} //סטיילינג\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {positions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, idx) => { //מאפינג לדפים\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={idx}>\r\n                  {columns.map((column, idx) => { //  מאפינג שורות לתוך הטבלה\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={idx} align={column.align} style={{ textAlign: 'center', fontSize: '11px', height: '16.5px', borderBottom: '1px solid black' }}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination //פאג'ינציה (דפים)\r\n        rowsPerPageOptions={[10]} //אפשרות לתת למשתמש לבחור כמות שורות בדף כרגע האפשרות היחידה היא 10\r\n        component=\"div\"\r\n        count={positions.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <Button\r\n        onClick={() => props.PdfArray(positions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage))}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={\r\n          { fontSize: '14px', position: 'relative', left: '10px', bottom: '10px' }\r\n        }>\r\n        Download Page as PDF\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({ //יצירת סטיילינג\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function DialogSelect(props) { //פונקציה ראשית - מודאל התחלת פוזיצייה חדשה\r\n  const classes = useStyles(); //שימוש בסטיילינג לפי קלאסים\r\n  const [open, setOpen] = useState(false); //סטייט של פתיחת המודל\r\n  const [type, setType] = useState('crypto'); //סטייט של סוג הפוזיציה\r\n  const [amount, setAmount] = useState(1); //סטייט של כמות הפוזיציות\r\n  const [stockValue, setstockValue] = useState(5); //סטייט של שווי המניות\r\n  const [stocksFlag, setStocksFlag] = useState(false);\r\n  const [forexFlag, setForexFlag] = useState(true);\r\n\r\n\r\n  const handleTypeChange = (value) => { //פונקצייה לשינוי סוג הפוזיציה\r\n    setType(value); //משנה את הפוזיציה לפי הערך שנבחר\r\n  };\r\n\r\n  const handleAmountChange = (value) => { //פונקציה לשינוי כמות הפוזיציות\r\n    setAmount(value); //שינוי כמות הפוזיציות לפי הערך שנבחר\r\n  };\r\n\r\n  const handleStockValueChange = (value) => { //פונקציה לשינוי שווי המניה\r\n    setstockValue(value); //שינוי שווי המניה לערך שנבחר\r\n  };\r\n\r\n  const handleClickOpen = () => { //פונקציה לפתיחת המודל\r\n    setOpen(true); //פותח את המודל בעזרת פלאג\r\n  };\r\n\r\n  const handleClose = () => { //פונקציה לסגירת המודל\r\n    setOpen(false); //סוגר את המודל בעזרת פלאג\r\n  };\r\n\r\n  const closeModalAndStartTimer = (type, amount, stockValue) => { //פונקציה לסגור את המודל ולהפעיל את הטיימר\r\n    handleClose(); //סוגר את המודל\r\n    props.handleStartTimer(type, amount, stockValue); //מפעיל את הטיימר בפונקצייה הראשית\r\n  };\r\n\r\n  useEffect(() => {\r\n    const weekday = true;\r\n    let today = {\r\n      timeZone: 'America/New_York',\r\n      weekday: 'short',\r\n    },\r\n      formatter2 = new Intl.DateTimeFormat('en-US', today);\r\n\r\n    if (formatter2.format(new Date()) === 'Sat' || formatter.format(new Date()) === 'Sun') {\r\n      weekday = false;\r\n    };\r\n    let options = {\r\n      timeZone: 'Asia/Jerusalem',\r\n      hour: 'numeric',\r\n    },\r\n      formatter = new Intl.DateTimeFormat([], options);\r\n\r\n    if (formatter.format(new Date()) > 16 && formatter.format(new Date()) < 21 && weekday) {\r\n      setStocksFlag(true);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let today = {\r\n      timeZone: 'America/New_York',\r\n      weekday: 'short',\r\n    },\r\n      formatter = new Intl.DateTimeFormat('en-US', today);\r\n    if (formatter.format(new Date()) === 'Sun') {\r\n      let hour = {\r\n        timeZone: 'America/New_York',\r\n        hour: 'numeric',\r\n      },\r\n        formatter = new Intl.DateTimeFormat([], hour);\r\n      if (formatter.format(new Date()) <= 17) {\r\n        setForexFlag(false);\r\n      }\r\n    }\r\n    if (formatter.format(new Date()) === 'Sat') {\r\n      setForexFlag(false);\r\n    }\r\n    if (formatter.format(new Date()) === 'Fri') {\r\n      let hour = {\r\n        timeZone: 'America/New_York',\r\n        hour: 'numeric',\r\n      },\r\n        formatter = new Intl.DateTimeFormat([], hour);\r\n      if (formatter.format(new Date()) >= 16) {\r\n        setForexFlag(false);\r\n      };\r\n    };\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{ fontSize: '15px', width: '200px' }}\r\n        onClick={handleClickOpen} //פותח את המודל בלחיצה\r\n      >\r\n        get a new position\r\n            <NotificationsActiveIcon />\r\n      </Button>\r\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>choose the type and amount of positions you want to get</DialogTitle>\r\n        <DialogContent>\r\n          <form className={classes.container}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"demo-dialog-native\">Type</InputLabel>\r\n              <Select\r\n                native\r\n                value={type}\r\n                onChange={({ target: { value } }) => handleTypeChange(value)} //קריאה לפונקציה שמשנה את סוג הפוזיציה\r\n                input={<Input id=\"demo-dialog-native\" />}\r\n              >\r\n                <option value='crypto'>Crypto Currency</option>\r\n                {stocksFlag === true && <option value='stocks'>Stocks</option>}\r\n                {forexFlag === true && <option value='pairs'>Currency pairs</option>}\r\n                {forexFlag === true && <option value='comodity'>Comodity</option>}\r\n                {forexFlag === true && <option value='bonds'>Bonds</option>}\r\n                <option value='rest'>Indexes</option>\r\n\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-dialog-select-label\">Positions</InputLabel>\r\n              <Select\r\n                labelId=\"demo-dialog-select-label\"\r\n                id=\"demo-dialog-select\"\r\n                value={amount}\r\n                onChange={({ target: { value } }) => handleAmountChange(value)} //קריאה לפונקציה שמשנה את כמות הפוזיציות\r\n                input={<Input />}\r\n              >\r\n                <MenuItem value={1}>1</MenuItem>\r\n                <MenuItem value={2}>2</MenuItem>\r\n                <MenuItem value={3}>3</MenuItem>\r\n                <MenuItem value={4}>4</MenuItem>\r\n                <MenuItem value={5}>5</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            {type === 'stocks' && <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-dialog-select-label\">Stock's value</InputLabel>\r\n              <Select\r\n                labelId=\"demo-dialog-select-label\"\r\n                id=\"demo-dialog-select\"\r\n                value={stockValue}\r\n                onChange={({ target: { value } }) => handleStockValueChange(value)} //קריאה לפונקציה שמשנה את שווי המניה\r\n                input={<Input />}\r\n              >\r\n                <MenuItem value={5}>5$-100$</MenuItem>\r\n                <MenuItem value={100}>100$-200$</MenuItem>\r\n                <MenuItem value={200}>200$+</MenuItem>\r\n\r\n              </Select>\r\n            </FormControl>}\r\n          </form>\r\n          <h3>\r\n            the timer will start according to the current time and will stop when the minutes on the clock reach 01/16/31/46\r\n              {<br />}\r\n              (for example: 03:16, 07:46)\r\n          </h3>\r\n          <h4>\r\n            Regular trading hours for the U.S. stock market, including the New York Stock Exchange (NYSE)\r\n            and the Nasdaq Stock Market (Nasdaq), are 9:30 a.m. to 2 p.m.\r\n            Eastern time on weekdays (except stock market holidays, Saturday and Sunday).\r\n          </h4>\r\n          <h4>\r\n            The Forex market (Currency pairs,Comodity and Bonds)is open 24\r\n            hours a day in different parts of the world, from 5 p.m. EST on Sunday until 4 p.m. EST on Friday.\r\n            (except Forex market holidays)\r\n          </h4>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => closeModalAndStartTimer(type, amount, stockValue)} //קריאה לפונקציה שמפעילה את הטיימר\r\n            color=\"primary\">\r\n            Start timer\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nexport default function AdminUsersTable() {\r\n  const [page, setPage] = React.useState(0); //סטייט של פאג'ינציה\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10); //סטייט של מספר ההודעות בעמוד\r\n  const [users, setUsers] = React.useState([]); //סטייט של המשתמשים מהדאטאבייס\r\n  const [usersRows, setusersRows] = React.useState([]);\r\n\r\n  const columns = [ //עמודות לטבלה של המשתמשים\r\n    {\r\n      id: 'userId', //מזהה\r\n      label: 'User id', //השם שיופיע בדפדפן\r\n      minWidth: 50, //רוחב מינימלי\r\n      align: 'center' //סידור הטקסט במרכז העמודה\r\n    },\r\n    {\r\n      id: 'firstName',\r\n      label: 'First name',\r\n      minWidth: 50,\r\n      align: 'center'\r\n    },\r\n    {\r\n      id: 'lastName',\r\n      label: 'Last name',\r\n      minWidth: 50,\r\n      align: 'center'\r\n    },\r\n    {\r\n      id: 'email',\r\n      label: 'Email',\r\n      minWidth: 50,\r\n      align: 'center'\r\n    },\r\n    {\r\n      id: 'phone',\r\n      label: 'Phone',\r\n      minWidth: 50,\r\n      align: 'center'\r\n    },\r\n    {\r\n      id: 'date',\r\n      label: 'Signup date',\r\n      minWidth: 50,\r\n      align: 'center'\r\n    },\r\n    {\r\n      id: 'credits',\r\n      label: 'credits',\r\n      minWidth: 50,\r\n      align: 'center'\r\n    },\r\n    {\r\n      id: 'actions',\r\n      label: 'Actions',\r\n      minWidth: 50,\r\n      align: 'center'\r\n    },\r\n    {\r\n      id: 'delete',\r\n      label: 'Delete',\r\n      minWidth: 50,\r\n      align: 'center'\r\n    },\r\n  ];\r\n\r\n  const changeUserCredits = async (email, amount) => { //פונקציה לשינוי הקרדיט של משתמש\r\n    try {\r\n      axios.post('/auth/changeCredits', { //api לשינוי קרדיט\r\n        email: email, //האימייל של המשתמש\r\n        amount: amount //הכמות אלייה האדמין רוצה לשנות\r\n      });\r\n      alert('user`s credits successfully changed.'); //הודעה שהשינוי בוצע\r\n    } catch {\r\n      alert('something went wrong'); //הודעה שמשהו השתבש במקרה של כשלון\r\n    };\r\n  };\r\n\r\n  const createData = (userId, firstName, lastName, email, phone, date, credits, successRate) => { //פונקציה שיוצרת דאטא שיכנס לטבלה של משתמשים\r\n    return {\r\n      userId, //מזהה משתמש\r\n      firstName, //שם פרטי\r\n      lastName, //שם משפחה\r\n      email, //אימייל\r\n      phone, //טלפון\r\n      date, //תאריך\r\n      credits, //קרדיטים\r\n      successRate //אחוזי הצלחה\r\n    };\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => { //פונקציה שמחליפה דף - פאג'ינציה\r\n    setPage(newPage); //שינוי דף - סטייט\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => { //פונקציה שמחליטה כמה שורות יהיו בעמוד - לא פעיל כרגע\r\n    setRowsPerPage(10); //תמיד יהיה על 10\r\n    setPage(0);\r\n  };\r\n  const fNameChanged = async (value) => {\r\n    let filter = usersRows.filter(row => row.firstName.toLowerCase().includes(value));\r\n    setusersRows(filter);\r\n    if (value === '') {\r\n      setusersRows([]);\r\n      for (let i = 0; i < users.length; i++) {\r\n        setusersRows(usersRows => [...usersRows,  //דחיפה לתוך המשתנה\r\n        ( //קריאה לפונקציה שיוצרת דאטא למשתמשים\r\n          users[i]._id, users[i].firstName, users[i].lastName, users[i].email, users[i].phone, users[i].created_at, users[i].credits\r\n        )]);\r\n      };\r\n    }\r\n  }\r\n\r\n  const lNameChanged = async (value) => {\r\n    let filter = usersRows.filter(row => row.lastName.toLowerCase().includes(value));\r\n    setusersRows(filter);\r\n    if (value === '') {\r\n      setusersRows([]);\r\n      for (let i = 0; i < users.length; i++) {\r\n        setusersRows(usersRows => [...usersRows,  //דחיפה לתוך המשתנה\r\n        ( //קריאה לפונקציה שיוצרת דאטא למשתמשים\r\n          users[i]._id, users[i].firstName, users[i].lastName, users[i].email, users[i].phone, users[i].created_at, users[i].credits\r\n        )]);\r\n      };\r\n    }\r\n  }\r\n\r\n  const emailChanged = async (value) => {\r\n    let filter = usersRows.filter(row => row.email.toLowerCase().includes(value));\r\n    setusersRows(filter);\r\n    if (value === '') {\r\n      setusersRows([]);\r\n      for (let i = 0; i < users.length; i++) {\r\n        setusersRows(usersRows => [...usersRows,  //דחיפה לתוך המשתנה\r\n        ( //קריאה לפונקציה שיוצרת דאטא למשתמשים\r\n          users[i]._id, users[i].firstName, users[i].lastName, users[i].email, users[i].phone, users[i].created_at, users[i].credits\r\n        )]);\r\n      };\r\n    }\r\n  }\r\n\r\n  const dateChanged = async (value) => {\r\n    let filter = usersRows.filter(row => String(row.date).includes(value));\r\n    setusersRows(filter);\r\n    if (value === '') {\r\n      setusersRows([]);\r\n      for (let i = 0; i < users.length; i++) {\r\n        setusersRows(usersRows => [...usersRows,  //דחיפה לתוך המשתנה\r\n        ( //קריאה לפונקציה שיוצרת דאטא למשתמשים\r\n          users[i]._id, users[i].firstName, users[i].lastName, users[i].email, users[i].phone, users[i].created_at, users[i].credits\r\n        )]);\r\n      };\r\n    }\r\n  }\r\n\r\n  const phoneChanged = async (value) => {\r\n    let filter = usersRows.filter(row => String(row.phone).includes(value));\r\n    setusersRows(filter);\r\n    if (value === '') {\r\n      setusersRows([]);\r\n      for (let i = 0; i < users.length; i++) {\r\n        setusersRows(usersRows => [...usersRows,  //דחיפה לתוך המשתנה\r\n        ( //קריאה לפונקציה שיוצרת דאטא למשתמשים\r\n          users[i]._id, users[i].firstName, users[i].lastName, users[i].email, users[i].phone, users[i].created_at, users[i].credits\r\n        )]);\r\n      };\r\n    }\r\n  }\r\n\r\n  const deleteUser = async (id) => {\r\n    console.log(id)\r\n    await axios.delete(`/auth/deleteUser/${id}`)\r\n    alert('User deleted Successfully');\r\n    window.location.reload(); //רענון של הדף\r\n  }\r\n\r\n\r\n  useEffect(async () => { //ברגע שהדף עולה בפעם הראשונה\r\n    const resUsers = await axios.get('/auth/allUsers'); //API שולף את כל המשתמשים\r\n    setUsers(resUsers.data); //מעדכן סטייט של משתמשים\r\n    for (let i = 0; i < resUsers.data.length; i++) {\r\n      setusersRows(usersRows => [...usersRows,  //דחיפה לתוך המשתנה\r\n      ( //קריאה לפונקציה שיוצרת דאטא למשתמשים\r\n        resUsers.data[i]._id, resUsers.data[i].firstName, resUsers.data[i].lastName, resUsers.data[i].email, resUsers.data[i].phone, resUsers.data[i].created_at, resUsers.data[i].credits\r\n      )]);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ position: 'absolute', top: '250px', left: '0', right: '0', marginLeft: 'auto', marginRight: 'auto', width: '1500px' }}>\r\n      <TextField id=\"filled-basic\" label=\"Search by F-name\" variant=\"filled\" style={{ marginRight: '100px', marginLeft: '200px', width: '150px' }}\r\n        onChange={({ target: { value } }) => fNameChanged(value)}\r\n      />\r\n      <TextField id=\"filled-basic\" label=\"Search by L-name\" variant=\"filled\" style={{ marginRight: '100px', width: '150px' }}\r\n        onChange={({ target: { value } }) => lNameChanged(value)}\r\n      />\r\n      <TextField id=\"filled-basic\" label=\"Search by email\" variant=\"filled\" style={{ marginRight: '100px', width: '150px' }}\r\n        onChange={({ target: { value } }) => emailChanged(value)}\r\n      />\r\n      <TextField id=\"filled-basic\" label=\"Search by phone\" variant=\"filled\" style={{ marginRight: '100px,', width: '150px' }}\r\n        onChange={({ target: { value } }) => phoneChanged(value)}\r\n      />\r\n      <TextField id=\"filled-basic\" label=\"Search by date\" variant=\"filled\" style={{ marginRight: '100px', marginLeft: '100px', width: '150px' }}\r\n        onChange={({ target: { value } }) => dateChanged(value)}\r\n      />\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {usersRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {  //סלייס+מאפינג של השורות לפי עמודים\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      if (column.id !== 'credits') {\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                            {column.id === 'actions' && <Button\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => changeUserCredits(row.email, row.credits)} //שינוי הקרדיט למשתמש בלחיצה לפי הסכום שנבחר\r\n                            >\r\n                              Change credits\r\n                              </Button>}\r\n                            {column.id === 'delete' && <Button\r\n                              variant=\"contained\"\r\n                              color=\"secondary\"\r\n                              onClick={() => deleteUser(row.userId)}\r\n                            >\r\n                              Delete User\r\n                              </Button>}\r\n                          </TableCell>\r\n                        );\r\n                      }\r\n                      else {\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            <TextField\r\n                              id=\"standard-number\"\r\n                              label=\"Amount\"\r\n                              type=\"number\"\r\n                              placeholder={value}\r\n                              InputLabelProps={{\r\n                                shrink: true,\r\n                              }}\r\n                              style={{\r\n                                width: '60px'\r\n                              }}\r\n                              onChange={({ target: { value } }) => row.credits = value} //שינוי מספר הקרדיטים\r\n                            />\r\n                          </TableCell>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={usersRows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AdminUsersTable from './AdminUsersTable';\r\n\r\n\r\n\r\nexport default function AdminEmailTable() { //פונקציה ראשית של אדמין\r\n  const [page, setPage] = React.useState(0); //סטייט של פאג'ינציה\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10); //סטייט של מספר ההודעות בעמוד\r\n  const [emails, setEmails] = React.useState([]); //סטייט של האימיילים מהדאטאבייס\r\n\r\n  const useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n  });\r\n\r\n  function Row(props) { //פונקציה שמטפלת בשורות לטבלה של הודעות\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false); //סטייט לקולאפס של ההודעות עצמן\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <TableRow className={classes.root}>\r\n          <TableCell>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n            {row.fullName}\r\n          </TableCell>\r\n          <TableCell align=\"center\">{row.email}</TableCell>\r\n          <TableCell align=\"center\">{row.date}</TableCell>\r\n          <TableCell align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => deleteMessage(row.id)} //בלחיצה מפעיל את הפונקציה למחיקת הודעה עם האיידי של ההודעה למחוק\r\n            >\r\n              <DeleteForeverIcon />\r\n            </Button>\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Message\r\n                    </Typography>\r\n                <Typography gutterBottom component=\"div\">\r\n                  {row.message}\r\n                </Typography>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n\r\n  function createData(id, fullName, email, date, message) { // פונקציה שיוצרת דאטא שיכנס לטבלה של ההודעות\r\n    return {\r\n      id, //מזהה\r\n      fullName, //שם מלא\r\n      email, //אימייל\r\n      date, //תאריך\r\n      message, //הודעה\r\n    };\r\n  }\r\n\r\n\r\n  let rows = []; //משתנה שמכיל את השורות לטבלה של האימיילים\r\n  if (emails[0]) { //ברגע שהתקבלו אימיילים\r\n    for (let i = 0; i < emails.length; i++) { //לולאת פור\r\n      rows.unshift( //דחיפה לתוך המשתנה\r\n        createData( // קריאה לפונקציה שיוצרת דאטא לאימיילים\r\n          emails[i]._id, emails[i].fullName, emails[i].email, emails[i].created_at, emails[i].message // הדאטא שנכנס  \r\n        )\r\n      );\r\n    };\r\n  };\r\n\r\n\r\n  const handleChangePage = (event, newPage) => { //פונקציה שמחליפה דף - פאג'ינציה\r\n    setPage(newPage); //שינוי דף - סטייט\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => { //פונקציה שמחליטה כמה שורות יהיו בעמוד - לא פעיל כרגע\r\n    setRowsPerPage(10); //תמיד יהיה על 10\r\n    setPage(0);\r\n  };\r\n\r\n\r\n  const deleteMessage = (id) => { //פונקציה למחיקת הודעה\r\n    axios.delete(`/emails/delete/${id}`); //API שמוחק הודעה\r\n    alert('The message has been deleted successfully'); //אלרט שההודעה נמחקה\r\n    window.location.reload(); //רענון של הדף\r\n  }\r\n\r\n\r\n\r\n  const deleteWholePage = () => { //מחיקת דף שלם של הודעות\r\n    const currentPageData = rows.slice( //חישוב ההודעות בדף הנוכחי\r\n      page * rowsPerPage, page * rowsPerPage + rowsPerPage) //חישוב ההודעות בדף הנוכחי\r\n      .map((row) => row.id); //חישוב ההודעות בדף הנוכחי\r\n    for (let i = 0; i < currentPageData.length; i++) { //לולאת פור\r\n      axios.delete(`/emails/delete/${currentPageData[i]}`); //API שמוחק את ההודעות\r\n    }\r\n    alert('the page has been deleted successfully'); //הודעה שהמחיקה בוצעה בהצלחה\r\n    window.location.reload(); //טעינת הדף מחדש\r\n  }\r\n\r\n  useEffect(async () => { //ברגע שהדף עולה בפעם הראשונה\r\n    const resEmails = await axios.get('/emails/getall'); //API שולף את כל האימיילים\r\n    setEmails(resEmails.data); //מעדכן סטייט של אימיילים\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ position: 'absolute', top: '300px', right: '200px' }}>\r\n      <TableContainer component={Paper} style={{ width: '1200px' }}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell id=\"name\" align=\"center\">Sender's full name</TableCell>\r\n              <TableCell id=\"email\" align=\"center\">Sender's Email</TableCell>\r\n              <TableCell id=\"date\" align=\"center\">sending Date</TableCell>\r\n              <TableCell id=\"action\" align=\"center\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n              <Row key={row.name} row={row} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{\r\n          position: 'absolute',\r\n          left: '42%',\r\n          bottom: '5px',\r\n        }}\r\n        onClick={() => deleteWholePage()} //מחיקת כל ההודעות בדף בלחיצה\r\n      >\r\n        delete Whole page\r\n        </Button>\r\n    </div>\r\n  )\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './PositionsTable.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles({ //יצירת סטיילינג\r\n  root: { //דיב רוט \r\n    width: '100%',\r\n  },\r\n  container: { // דיב חיצוני ביותר\r\n    maxHeight: 800,\r\n  },\r\n});\r\n\r\nexport default function AdminPositionsTable({ positionType }) { //הפונקציה של הטבלה\r\n  const classes = useStyles(); //שימוש בסטיילינג לפי קלאסים\r\n  const [page, setPage] = React.useState(0); //סטייט של הפאג'ינציה (עמודים)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(11); //כמות שורות פר עמוד\r\n  const [positions, setPositions] = React.useState([]);\r\n  const [rows, setRows] = React.useState([]);\r\n\r\n\r\n  const columns = [  // עמודות לטבלה הראשית\r\n    {\r\n      id: 'Num', // id = מזהה\r\n      label: '#', // label = השם שמוצג בעמוד\r\n      minWidth: 50, // רוחב מינימלי\r\n    },\r\n    {\r\n      id: 'Symbol',\r\n      label: 'Symbol',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'Operation',\r\n      label: 'Operation',\r\n      minWidth: 50\r\n    },\r\n    {\r\n      id: 'StartDate',\r\n      label: 'Start Date',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'EndDate',\r\n      label: 'End Date',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'StartPrice',\r\n      label: 'Start Price',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'EndPrice',\r\n      label: 'End Price',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'succeeded',\r\n      label: 'Succeeded',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'PipsesCents',\r\n      label: 'Pipses/Cents',\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      id: 'precent',\r\n      label: 'Success rate (per page)',\r\n      minWidth: 50,\r\n    },\r\n  ];\r\n\r\n  function createData( //פונקציה המייצרת דאטא חדש לטבלה\r\n    Num,\r\n    Symbol,\r\n    Operation,\r\n    StartDate,\r\n    EndDate,\r\n    StartPrice,\r\n    EndPrice,\r\n    succeeded,\r\n    PipsesCents,\r\n    precent\r\n  ) {\r\n    return { Num, Symbol, Operation, StartDate, EndDate, StartPrice, EndPrice, succeeded, PipsesCents, precent };\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => { //פונקציה לשינוי עמוד\r\n    setPage(newPage); //שינוי הסטייט לעמוד חדש\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => { //אפשרות למשתמש לשנות את מספר השורות בעמוד (כרגע מבוטל)\r\n    setRowsPerPage(+event.target.value); //המספר שהמשתמש בחר\r\n    setPage(0);\r\n  };\r\n\r\n  const addSuccessRate = (arr) => {\r\n    let arrays = [];\r\n    const size = 10;\r\n    let ratesArray = [];\r\n    // חותך את המערך לצ'אנקים של 10 או פחות\r\n    for (let i = 0; i < arr.length; i += size) {\r\n      arrays.push(arr.slice(i, i + size));\r\n    }\r\n    //לולאת פור איצ\r\n    arrays.forEach(chunk => {\r\n      console.log(chunk)\r\n      //מוצא את מספר הפוזיציות שהצליחו\r\n      let succeeded = chunk.filter(item => item.succeeded == 'true').length;\r\n      // מוצא את מספר הפוזיציות שעדיין לא נסגרו\r\n      let unClosedPositions = 0;\r\n      chunk.map((item) => {\r\n        if (item.succeeded == 'undefined') {\r\n          unClosedPositions++;\r\n        };\r\n      });\r\n      // מוצא את אחוזי ההצלחה לפי החישוב הבא: מספר הפוזיציות שהצליחו לחלק לגודל הצ'אנק פחות מספר הפוזיציות שלא נסגרו\r\n      let rate = (succeeded / (chunk.length - unClosedPositions)) * 100;\r\n      rate = rate.toFixed() + '%';\r\n      if (rate === 'NaN%') {\r\n        rate = '0%'\r\n      };\r\n      ratesArray.push(rate);\r\n      //לכל אובייקט במערך successRate מוסיף מפתח בשם\r\n    });\r\n    arrays.map((array, idx) => array.unshift(createData('', '', '', '', '', '', '', '', '', ratesArray[idx])));\r\n    console.log(arrays);\r\n    return arrays.flat()\r\n  }\r\n\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`/positions/getAll${positionType}`);\r\n    const enrichedRows = [];\r\n    data.sort((a, b) => {\r\n      return b.insertTime - a.insertTime;\r\n    });\r\n    data.map((object, idx) => {\r\n      if (object.pipsed !== undefined) {\r\n        object.pipsed = object.pipsed.toFixed(3);\r\n      };\r\n      enrichedRows.push(\r\n        createData(\r\n          idx + 1,\r\n          object.symbol,\r\n          object.operation,\r\n          object.startDate,\r\n          object.endDate,\r\n          object.startPrice,\r\n          object.endPrice,\r\n          String(object.succeeded),\r\n          object.pipsed,\r\n          object.Precent\r\n        )\r\n      )\r\n    })\r\n    const finalRows = addSuccessRate(enrichedRows);\r\n    setRows(finalRows);\r\n  }, [])\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column, idx) => ( //מאפינג לעמודות\r\n                <TableCell\r\n                  key={idx} //מזהה\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, textAlign: 'center', backgroundColor: 'lightBlue' }} //סטיילינג\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, idx) => { //מאפינג לדפים\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={idx}>\r\n                  {columns.map((column, idx) => { //  מאפינג שורות לתוך הטבלה\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={idx} align={column.align} style={{ textAlign: 'center', fontSize: '11px', height: '16.5px', borderBottom: '1px solid black' }}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination //פאג'ינציה (דפים)\r\n        rowsPerPageOptions={[10]} //אפשרות לתת למשתמש לבחור כמות שורות בדף כרגע האפשרות היחידה היא 10\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AdminPositonsTable from './AdminPositionsTable';\r\n\r\n// פונקציה של מאטיריאל ליצירת הפאל של הטאבים\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n// פונקציה של מאטיריאל ליצירת הפרופס של הטאבים\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n// סטיילינ - הוקס\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'absolute',\r\n    top: '60px',\r\n    right: '12%'\r\n  },\r\n}));\r\n\r\n// פונקציה ראשית - שליטה בפאנל של האדמין\r\nexport default function AdminPositionsControl() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0); // הערך שהאדמין רוצה לפצות בו\r\n\r\n  // פונקציה שאחראית על שינוי הערך שבו האדמין רוצה לצפות\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} position=\"absolute\" style={{ top: '250px' }}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab label=\"Crypto\" {...a11yProps(0)} />\r\n          <Tab label=\"Currency pairs\" {...a11yProps(1)} />\r\n          <Tab label=\"Bonds\" {...a11yProps(2)} />\r\n          <Tab label=\"Comodity\" {...a11yProps(3)} />\r\n          <Tab label=\"Rest\" {...a11yProps(4)} />\r\n          <Tab label=\"Stocks\" {...a11yProps(5)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        {<AdminPositonsTable positionType=\"crypto\" />}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {<AdminPositonsTable positionType=\"pairs\" />}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        {<AdminPositonsTable positionType=\"bonds\" />}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        {<AdminPositonsTable positionType=\"comodity\" />}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        {<AdminPositonsTable positionType=\"rest\" />}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        {<AdminPositonsTable positionType=\"stocks\" />}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport AdminUsersTable from './AdminUsersTable';\r\nimport AdminEmailTable from './AdminEmailsTable';\r\nimport AdminPositionsControl from './AdminPositionsControl';\r\n\r\nexport default function AdminPanel() { //פונקציה ראשית של אדמין\r\n  const [view, setView] = useState(''); //סטייט שבודק מה האדמין רוצה לראות\r\n\r\n  const handleViewChange = (value) => { //פונקציה שבודקת במה האדמין רוצה לצפות (משתמשים, הודעות, פוזיציות)\r\n    setView(value); //עדכון הסטייט לפי מה שבחר האדמין\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{\r\n            fontSize: '15px',\r\n            position: 'relative',\r\n          }}\r\n          onClick={() => handleViewChange('messages')} //משנה את הטבלה להודעות בלחיצה\r\n        >\r\n          View Messages\r\n          </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{\r\n            fontSize: '15px',\r\n            position: 'relative',\r\n            left: '40px'\r\n          }}\r\n          onClick={() => handleViewChange('users')} //משנה את הטבלה למשתמשים בלחיצה\r\n        >\r\n          View Users\r\n          </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{\r\n            fontSize: '15px',\r\n            position: 'relative',\r\n            left: '80px'\r\n          }}\r\n          onClick={() => handleViewChange('positions')} //משנה את הטבלה לפוזיציות בלחיצה\r\n        >\r\n          View All Positions\r\n          </Button>\r\n      </div>\r\n      <div>\r\n        {/* החלק הזה קורה רק במידה והאדמין רוצה לראות הודעות */}\r\n        {view === 'messages' && <AdminEmailTable />}\r\n        {/* החלק הזה קורה רק במידה והאדמין רוצה לראות את המשתמשים */}\r\n        {view === 'users' && <AdminUsersTable />}\r\n        {view === 'positions' && <AdminPositionsControl />}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/ring.2c183f48.mp3\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './HomePage.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport PositionsTable from '../components/PositionsTable';\r\nimport NewPositionModal from '../components/NewPositionModal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AdminPanel from '../components/AdminPanel';\r\nimport ring from '../assets/ring.mp3';\r\n\r\n// פונקציה שמוצאת ברייק פוינטס רספונסיביים ומחלקת אותם לקטגוריות לפי גודל המסך\r\nfunction getBreakPoint(windowWidth) {\r\n  if (windowWidth) {\r\n    if (windowWidth < 600) {\r\n      return \"xs\";\r\n    } else if (windowWidth < 960) {\r\n      return \"sm\";\r\n    } else if (windowWidth < 1280) {\r\n      return \"md\";\r\n    } else if (windowWidth < 1920) {\r\n      return \"lg\"\r\n    } else {\r\n      return \"xl\";\r\n    }\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n//סטיילינג - הוקס\r\nconst useStyles = makeStyles((theme) => ({ //שימוש בסטיילינג לפי קלאסים\r\n  root: { //סטייל לרוט דיב\r\n    flexGrow: 1\r\n  },\r\n  Button: { //סטייל לכפתורים\r\n    flexGrow: 0.1,\r\n  },\r\n  title: { //סטייל לכותרות בנאב באר\r\n    flexGrow: 0.12,\r\n    color: 'black'\r\n  },\r\n}));\r\n\r\nconst HomePage = () => { //פונקציה דף ראשי\r\n  const classes = useStyles(); //שימוש בסטיילינג לקלאסים\r\n  const [timerMinutes, setTimerMinutes] = useState('00'); //סטייט של טיימר - דקות\r\n  const [timerSeconds, setTimerSeconds] = useState('00');//סטייט של טיימר - שניות \r\n  const [userFirstName, setUserFirstName] = useState('Guest'); //סטייט של שם המשתמש\r\n  const [userPremission, setUserPremission] = useState(''); //סטייט של הראשות משתמש\r\n  const [userCredits, setUserCredits] = useState(0); //סטייט של קרדיט שיש למשתמש\r\n  const [userEmail, setUserEmail] = useState(''); //סטייט אימייל של המשתמש\r\n  const [newPositionsType, setNewPositionsType] = useState();\r\n  const [newPositionsAmount, setNewPositionsAmount] = useState();\r\n  const [newStocksRate, setNewStocksRate] = useState(5);\r\n  const [reRenderTable, setReRenderTable] = useState(false);\r\n  const [relativeEndDate, setRelativeEndDate] = useState();\r\n  const history = useHistory(); // ריאקט הוקס - ראוטר\r\n  const isWindowClient = typeof window === \"object\";\r\n  const [windowSize, setWindowSize] = useState(\r\n    isWindowClient\r\n      ? getBreakPoint(window.innerWidth) //👈\r\n      : undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    //הנדלר שנקרא ברגע שיש שינוי בגודל המסך\r\n    function setSize() {\r\n      setWindowSize(getBreakPoint(window.innerWidth)); //👈\r\n    }\r\n\r\n    if (isWindowClient) {\r\n      //register the window resize listener\r\n      window.addEventListener(\"resize\", setSize);\r\n\r\n      //unregister the listerner on destroy of the hook\r\n      return () => window.removeEventListener(\"resize\", setSize);\r\n    }\r\n  }, [isWindowClient, setWindowSize]);\r\n\r\n  let audio = new Audio(ring); //יצירת קובץ אודיו \r\n\r\n  const paypal = useRef();\r\n\r\n  const HandleLogout = async (e) => { //פונקציה שמנתקת את המשתמש\r\n    await axios.get('/auth/logout'); // API שמנתק את המשתמש\r\n    window.location.reload() //רענון של הדף\r\n  }\r\n\r\n  // פונקציה שקוראת לאייפיאיי שמוסיף פוזיציות מסוג קריפטו למשתמש לפי הכמות שבחר\r\n  const addNewCrypto = async () => {\r\n    const getNewCryptos = await axios.get(`/positions/getNewCrypto/${newPositionsAmount}`);\r\n    for (let i = 0; i < getNewCryptos.data.length; i++) {\r\n      await axios.post('/positions/addNewPosition', {\r\n        type: 'crypto',\r\n        email: userEmail,\r\n        id: getNewCryptos.data[i]._id\r\n      });\r\n    };\r\n  };\r\n\r\n  // פונקציה שקוראת לאייפיאיי שמוסיף פוזיציות מסוג בונדס למשתמש לפי הכמות שבחר\r\n  const addNewBonds = async () => {\r\n    const getNewBonds = await axios.get(`/positions/getNewBonds/${newPositionsAmount}`);\r\n    for (let i = 0; i < getNewBonds.data.length; i++) {\r\n      await axios.post('/positions/addNewPosition', {\r\n        type: 'bonds',\r\n        email: userEmail,\r\n        id: getNewBonds.data[i]._id\r\n      })\r\n    }\r\n  }\r\n\r\n  // פונקציה שקוראת לאייפיאיי שמוסיף פוזיציות מסוג רסט למשתמש לפי הכמות שבחר\r\n  const addNewRest = async () => {\r\n    const getNewRest = await axios.get(`/positions/getNewRest/${newPositionsAmount}`);\r\n    for (let i = 0; i < getNewRest.data.length; i++) {\r\n      axios.post('/positions/addNewPosition', {\r\n        type: 'rest',\r\n        email: userEmail,\r\n        id: getNewRest.data[i]._id\r\n      })\r\n    };\r\n  };\r\n\r\n  // פונקציה שקוראת לאייפיאיי שמוסיף פוזיציות מסוג קומודיטי למשתמש לפי הכמות שבחר\r\n  const addNewComodity = async () => {\r\n    const getNewComodity = await axios.get(`/positions/getNewComodity/${newPositionsAmount}`);\r\n    for (let i = 0; i < getNewComodity.data.length; i++) {\r\n      await axios.post('/positions/addNewPosition', {\r\n        type: 'comodity',\r\n        email: userEmail,\r\n        id: getNewComodity.data[i]._id\r\n      })\r\n    };\r\n  };\r\n\r\n\r\n  // פונקציה שקוראת לאייפיאיי שמוסיף פוזיציות מסוג קורנסי פיירס למשתמש לפי הכמות שבחר\r\n  const addNewPairs = async () => {\r\n    const getNewPairs = await axios.get(`/positions/getNewPairs/${newPositionsAmount}`);\r\n    console.log(getNewPairs);\r\n    for (let i = 0; i < getNewPairs.data.length; i++) {\r\n      await axios.post('/positions/addNewPosition', {\r\n        type: 'pairs',\r\n        email: userEmail,\r\n        id: getNewPairs.data[i]._id\r\n      })\r\n    };\r\n  };\r\n\r\n  // פונקציה שקוראת לאייפיאיי שמוסיף פוזיציות מסוג סטוקס למשתמש לפי הכמות שבחר\r\n  const addNewStocks = async () => {\r\n    const getNewStocks = await axios.get(`/positions/getNewStocks/${newPositionsAmount}/${newStocksRate}`);\r\n    for (let i = 0; i < getNewStocks.data.length; i++) {\r\n      await axios.post('/positions/addNewPosition', {\r\n        type: 'stocks',\r\n        email: userEmail,\r\n        id: getNewStocks.data[i]._id\r\n      })\r\n    };\r\n  };\r\n\r\n  //פונקציה שבודקת אם למשתמש יש מספיק קרדיט לקנות פוזיציה\r\n  const TimerValidation = async (type, amount, stockValue) => {\r\n    setNewPositionsType(type);\r\n    setNewPositionsAmount(amount);\r\n    setNewStocksRate(stockValue);\r\n    if (amount <= userCredits) { //במידה וכמות הפוזיציות קטנה מכמות הקרדיט של המשתמש\r\n      window.localStorage.setItem('timer', 1);\r\n      window.localStorage.setItem('email', userEmail);\r\n      window.localStorage.setItem('type', type);\r\n      window.localStorage.setItem('amount', userCredits);\r\n      startTimer(); //מפעיל את הטיימר\r\n      const updatedCredits = Number(userCredits - amount); //כמות הפוזציות שנקנו פחות כמות הקרדיט של המשתמש\r\n      await axios.post('/auth/changeCredits', { email: userEmail, amount: updatedCredits }); //API עדכון הקרדיט\r\n      setUserCredits(updatedCredits); //עדכון הקרדיט בדפדפן\r\n    } else {\r\n      alert('You dont have enough credits'); //הודעה במידה ואין למשתמש בספיק קרדיט\r\n    }\r\n  };\r\n\r\n  // פונקציה שעוצרת את הטיימר ומביאה פיצוי למשתמש\r\n  const stopTimer = async () => {\r\n    window.localStorage.removeItem('timer');\r\n    window.localStorage.removeItem('email');\r\n    window.localStorage.removeItem('type');\r\n    window.localStorage.removeItem('amount');\r\n    const updatedCredits = Number(userCredits + newPositionsAmount); //כמות הפוזציות שנקנו פחות כמות הקרדיט של המשתמש\r\n    await axios.post('/auth/changeCredits', { email: userEmail, amount: updatedCredits }); //API עדכון הקרדיט\r\n    window.location.reload() //רענון של הדף\r\n  }\r\n\r\n  //פונקציה שמפעילה את הטיימר \r\n  const startTimer = () => {\r\n    if (userFirstName !== 'Guest') {\r\n      const timeNowMinutes = new Date().toLocaleTimeString([], { minute: '2-digit' }) // בדיקה מה הזמן כרגע בדקות\r\n      const timeNowSeconds = 60 - new Date().toLocaleTimeString([], { second: '2-digit' }); // בדיקה 60 פחות הזמן כרגע בשניות\r\n      if (Number(timeNowMinutes) < 16) { //במידה והדקות בשעון כרגע פחות מ15\r\n        const timerMinutes = 15 - timeNowMinutes; // מוריד 14 דקות מהשעה הנוכחית (לדוגמא אם כרגע 14:07 התוצאה תהיה 7)\r\n        setTimerMinutes(timerMinutes); // מפעיל את הטיימר על 7 דקות(נוסף פה גם חישוב של שניות בהמשך אז התוצאה תהיה לדוגמא 7:35)\r\n      }\r\n      else if (Number(timeNowMinutes) < 31) { // אותו דבר רק לגבי פחות  מ30 דקות\r\n        const timerMinutes = 30 - timeNowMinutes;\r\n        setTimerMinutes(timerMinutes);\r\n      }\r\n      else if (Number(timeNowMinutes) < 46) { // אותו דבר רק לגבי פחות מ45 דקות\r\n        const timerMinutes = 45 - timeNowMinutes;\r\n        setTimerMinutes(timerMinutes);\r\n      }\r\n      else if (Number(timeNowMinutes) > 46) { // אותו דבר אבל מעל 45 דקות\r\n        const timerMinutes = 60 - timeNowMinutes;\r\n        setTimerMinutes(timerMinutes);\r\n      }\r\n      setTimerSeconds(timeNowSeconds); //חישוב השניות והוספה לטיימר\r\n\r\n    }\r\n    else {\r\n      alert('You have to login to get new positions'); //משתמש לא מחובר מנסה להביא פוזיציה\r\n    }\r\n  }\r\n\r\n  const TimerHandler = async () => { //פונקציה הגורמת לטיימר לעבוד (הטיימר בודק כל הזמן את השעה הנוכחית ומוודא שהיא תואמת לטיימר) //במידה והטיימר לא על 00:00\r\n    const Interval = setInterval(async () => { //יצירת אינטרבל שעובד כל שנייה\r\n      if (timerMinutes !== -1) { //אם הטיימר לא סיים לעבוד\r\n        const timeNowSeconds = 60 - new Date().toLocaleTimeString([], { second: '2-digit' }); //בדיקת הזמן הנוכחי בשניות\r\n        setTimerSeconds(timeNowSeconds); //שינוי הטיימר בשניות ל60 פחות הזמן הנוכחי בשניות\r\n        clearInterval(Interval); //ניקוי האינטרבל\r\n      }\r\n      else if (timerMinutes === -1 && timerSeconds === '60') { //במידה והטיימר סיים לעבוד\r\n        clearInterval(Interval); //ניקוי אינטרבל\r\n        setTimerSeconds(0); // שינוי השניות ל00\r\n        setTimerMinutes(0); // שינוי הדקות ל00\r\n        window.localStorage.removeItem('timer');\r\n        window.localStorage.removeItem('email');\r\n        window.localStorage.removeItem('type');\r\n        window.localStorage.removeItem('amount');\r\n        audio.play(); // מפעיל את הפעמול \r\n        if (newPositionsType === 'crypto') { // במידה ונבחר קריפטו\r\n          await addNewCrypto();  // מוסיף קריפטו\r\n        }\r\n        if (newPositionsType === 'bonds') { // במידה ונבחר בונדס\r\n          await addNewBonds(); // מוסיף בונדס\r\n        }\r\n        if (newPositionsType === 'rest') { // במידה ונבחר רסט\r\n          await addNewRest(); // מוסיף רסט\r\n        }\r\n        if (newPositionsType === 'comodity') { // במידה ונבחר קומודיטי\r\n          await addNewComodity(); // מוסיף קומודיטי\r\n        }\r\n        if (newPositionsType === 'pairs') { // במידה ונבחר קורנסי פיירס\r\n          await addNewPairs(); // מוסיף קורנסי פיירס\r\n        }\r\n        if (newPositionsType === 'stocks') { // במידה ונבחר סטוקס\r\n          await addNewStocks(); // מוסיף סטוקס\r\n        }\r\n        handleReRenderTable();\r\n      }\r\n    }, 1000) //סוף האינטרבל\r\n    if (timerSeconds == '1') { //במידה והשניות הגיעו ל1\r\n      setTimeout(async () => {  //יצירת טיים אאוט\r\n        await setTimerMinutes(timerMinutes - 1); //כעבור שנייה הדקות ירדו ב1\r\n        setTimerSeconds('60');\r\n      }, 1000);//סוף הטיים אאוט\r\n    }\r\n  }\r\n\r\n  // פונקציה שקוראת לאייפיאיי שמכין פידיאף להורדה\r\n  const downloadPdf = async (positionsArray) => {\r\n    try {\r\n      await axios.post('/pdf/downloadpage', {\r\n        positions: positionsArray,\r\n        email: userEmail\r\n      });\r\n      window.open(`/usersPDF/${userEmail}.pdf`, '_blank')\r\n    } catch (err) {\r\n      console.log(err);\r\n    };\r\n  };\r\n\r\n  //פונקציית האנדלר לרענון של הקומפוננטה דרך קומפוננטה אחרת \r\n  const handleReRenderTable = () => {\r\n    setReRenderTable(true);\r\n    setTimeout(() => {\r\n      setReRenderTable(false);\r\n    }, 5000);\r\n  };\r\n\r\n  //אפקט שמריץ את הטיימר\r\n  useEffect(() => {\r\n    if (timerSeconds !== '1' && timerSeconds != 0) {\r\n      TimerHandler(); //קריאה לפונקציה שמפעילה את הטיימר\r\n    }\r\n  }, [timerSeconds]);\r\n\r\n  useEffect(async () => { //בעלייה הראשונה של הדף\r\n    const userDetails = await axios.get('/auth/userDetails'); //בודק אם המשתמש מחובר ואם כן מביא את הפרטים שלו\r\n    if (userDetails.data) { //אם המשתמש מחובר\r\n      const userCredits = await axios.get(`/auth/getUserById/${userDetails.data._id}`); //בודק כמה קרדיטים יש למשתמש \r\n      setUserPremission(userDetails.data.isAdmin); //מציג את ההרשאות של המשתמש\r\n      setUserCredits(userCredits.data.credits); //מציג את כמות הקרדיט של המשתמש לפי הדאטאבייס\r\n      setUserEmail(userDetails.data.email); //מציג את האימייל של המשתמש\r\n      setUserFirstName(userDetails.data.firstName) //מציג את השם הפרטי של המשתמש\r\n    }\r\n  }, [])\r\n\r\n  // אפקט שבודק אם המשתמש יצא כשהטיימר עבד ושומר אותו בלוקאל סטוריג\r\n  useEffect(() => {\r\n    if (userFirstName !== 'Guest') { // במידה והמשתמש מחובר\r\n      const StorageTimer = window.localStorage.getItem('timer'); // בודק אם היה לו טיימר שעבד\r\n      const email = window.localStorage.getItem('email'); // מוודא שזה אותו משתמש שסגר את הטיימר\r\n      if (StorageTimer == 1 && email === userEmail) { // במידה ושני התנאים נכונים\r\n        const amount = window.localStorage.getItem('amount'); // מביא את כמות הפוזיציות שהמשתמש רצה לפני שסגר את האתר\r\n        const type = window.localStorage.getItem('type'); // מביא את סוג הפוזיציות שהמשתמש רצה לפני שסגר את האתר\r\n        axios.post('/auth/changeCredits', {\r\n          email: email,\r\n          amount: amount\r\n        })\r\n        .then(() => {\r\n          window.localStorage.setItem('timer', 0);\r\n          window.localStorage.setItem('email', '');\r\n          window.localStorage.setItem('type', '');\r\n          window.localStorage.setItem('amount', '');\r\n          alert('You have left the page while the timer was working. please refreh the application to get refunded.')\r\n        })\r\n      }\r\n    }\r\n  }, [userFirstName]);\r\n\r\n  // ימחק בהמשך - פונקציית טסט שמאפסת את הדקות בטיימר למתרות טסטינג\r\n  const testTimer = () => {\r\n    setTimerMinutes(0);\r\n  };\r\n\r\n // פונקציה שמקבלת מהקומפוננטה של הטבלה תאריכים של פוזיציות פתוחות ומרנדרת מחדש את הטבלה כשתאריך סגירה מגיע\r\n  const getEndDateData = (endDatesArray) => {\r\n    //אופציות לטיימר שיפעל על שעון ישראל לפי תאריך\r\n    let options = {\r\n      timeZone: 'Asia/Jerusalem',\r\n      day: '2-digit', month: '2-digit', year: 'numeric', day: '2-digit'\r\n    },\r\n      formatter = new Intl.DateTimeFormat([], options);\r\n    let today = formatter.format(new Date()).replace(/[.]/g, '-'); //התאריך של היום\r\n\r\n    let validEndDatesArray = [];\r\n\r\n    //בודק שהתאריך של הפוזיציה וולידי\r\n    endDatesArray.map((date) => {\r\n      if (date.slice(0, 10) === today) {\r\n        validEndDatesArray.push(date);\r\n      };\r\n    });\r\n    // מסדר את התאריכים מהקרוב ביותר לרחוק ביותר\r\n    const sortedValidDates = validEndDatesArray.sort((a, b) => {\r\n      return a.slice(10).replace(':', '') - b.slice(10).replace(':', '');\r\n    });\r\n\r\n    //אופציות לטיימר שיפעל על שעון ישראל לפי שעה\r\n    let hourOptions = {\r\n      timeZone: 'Asia/Jerusalem',\r\n      hour: '2-digit'\r\n    },\r\n      formatter2 = new Intl.DateTimeFormat([], hourOptions);\r\n    let hour = formatter2.format(new Date());\r\n    //אופציות לטיימר שיפעל על שעון ישראל לפי דקה\r\n    let minuteOptions = {\r\n      timeZone: 'Asia/Jerusalem',\r\n      minute: '2-digit'\r\n    },\r\n      formatter3 = new Intl.DateTimeFormat([], minuteOptions);\r\n    let minutes = formatter3.format(new Date());\r\n    //מוודא שוב שהפוזיציה רלטיבית מבחינת שעות\r\n    const relativeDates = sortedValidDates.filter(date => Number(date.slice(10, 13)) >= hour && Number(date.slice(14, 16)) >= minutes);\r\n    setRelativeEndDate(relativeDates[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n        //אופציות לטיימר שיפעל על שעון ישראל לפי שעה\r\n    let hourOptions = {\r\n      timeZone: 'Asia/Jerusalem',\r\n      hour: '2-digit'\r\n    },\r\n      formatter2 = new Intl.DateTimeFormat([], hourOptions);\r\n    let hour = formatter2.format(new Date());\r\n\r\n    //אופציות לטיימר שיפעל על שעון ישראל לפי דקה\r\n    let minuteOptions = {\r\n      timeZone: 'Asia/Jerusalem',\r\n      minute: '2-digit'\r\n    },\r\n      formatter3 = new Intl.DateTimeFormat([], minuteOptions);\r\n    let minutes = formatter3.format(new Date());\r\n    \r\n    if (relativeEndDate) { // אם יש תאריכים רלוונטים\r\n      if (Number(relativeEndDate.slice(10, 13)) === Number(hour)) { //אם השעה של תאריך הסגירה שווה לשעה הנוכחית\r\n        setTimeout(() => { // מפעיל טיימר\r\n          handleReRenderTable(); //מרנדר מחדש את הטבלה\r\n        }, (Number(relativeEndDate.slice(14, 16) - minutes)) * 1000 * 60) // הזמן שהטיימר צריך לעבוד \r\n      }\r\n    }\r\n  }, [relativeEndDate]);\r\n\r\n  const bondsSymbols = ()=> {\r\n    window.open(\"https://docs.google.com/spreadsheets/d/1VZOFoAPhfIigwNSD8j4SjM3VXvJI17uKasW-KH-hjvk/edit#gid=0\", '_blank')\r\n  }\r\n\r\n  const pairsSymbols = ()=> {\r\n    window.open(\"https://docs.google.com/spreadsheets/d/13WBfVqtgm1lpx230yJyvFVxzgGzOwm96BRDtXTq_dMY/edit#gid=0\", '_blank')\r\n  }\r\n\r\n  const cryptoSymbols = ()=> {\r\n    window.open(\"https://docs.google.com/spreadsheets/u/2/d/1AXKooJnZS8j5HoZVLdmls8jh1B9SN7Xyw7EVzClqRW4/edit#gid=0\", '_blank')\r\n  }\r\n\r\n  const comoditySymbols = ()=> {\r\n    window.open(\"https://docs.google.com/spreadsheets/d/1qQSdmshVsYaP_fvwwDx27UlZBe_R57-R8ixmHtqceTU/edit#gid=0\", '_blank')\r\n  }\r\n\r\n  const stocksSymbols = ()=> {\r\n    window.open(\"https://docs.google.com/spreadsheets/u/2/d/1DmFY6gaN8xzYpNCVg6nOE9xpm05zqKQ97vPzXuZ6Dj0/edit#gid=1238020137\", '_blank')\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"relative\"\r\n        style={{ top: 0, height: '280px', margin: 'auto', paddingTop: '45px', backgroundColor: 'white', zIndex: '10' }}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" justify=\"center\" spacing={2}>\r\n            {userFirstName === 'Guest' && <Grid item xs={5} sm={3}>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Hello {userFirstName}\r\n              </Typography>\r\n            </Grid>}\r\n            {userFirstName !== 'Guest' && <Grid item xs={5} sm={1}>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Hello {userFirstName}\r\n              </Typography>\r\n            </Grid>}\r\n            {userFirstName !== 'Guest' && userPremission !== 1 && <Grid item xs={5} sm={1}>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                {userCredits} Credits\r\n            </Typography>\r\n            </Grid>}\r\n            {userPremission !== 1 && timerMinutes == '00' && timerSeconds == '00' &&\r\n              <Grid item xs={8} sm={2}>\r\n                <NewPositionModal handleStartTimer={(type, amount, stockValue) => TimerValidation(type, amount, stockValue)} />\r\n              </Grid>}\r\n            {userPremission !== 1 && timerSeconds != '00' && <Grid item xs={6} sm={2}>\r\n              <Button variant=\"contained\" color=\"secondary\"\r\n                onClick={() => testTimer()}\r\n              >\r\n                Stop timer (refund)\r\n            </Button>\r\n            </Grid>}\r\n            {userPremission !== 1 && userFirstName !== 'Guest' && <Grid item xs={5} sm={1}>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Timer: {timerMinutes}:{timerSeconds}\r\n              </Typography>\r\n            </Grid>}\r\n            {userPremission !== 1 && userFirstName !== \"Guest\" && <Grid item xs={6} sm={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{marginLeft: '75px'}}\r\n                onClick={() => history.push('/payment')}\r\n              >\r\n                Buy Credits\r\n            </Button>\r\n            </Grid>}\r\n            {userPremission !== 1 && userFirstName !== 'Guest' &&<Grid item xs={6} sm={2}>\r\n              <Link to=\"/contact\" style={{ textDecoration: 'none', marginLeft: '80px'}}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Contact us\r\n              </Button>\r\n              </Link>\r\n            </Grid>}\r\n            {userPremission !== 1 && userFirstName === 'Guest' &&<Grid item xs={6} sm={3}>\r\n              <Link to=\"/contact\" style={{ textDecoration: 'none', marginLeft: '80px'}}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Contact us\r\n              </Button>\r\n              </Link>\r\n            </Grid>}\r\n            {userFirstName === 'Guest' && <Grid item xs={7} sm={1}>\r\n              <Link to=\"/login\" style={{ textDecoration: 'none' }}>\r\n                <Button variant=\"contained\" color=\"success\">\r\n                  Sign in\r\n              </Button>\r\n              </Link>\r\n            </Grid>}\r\n            {userFirstName === 'Guest' && <Grid item xs={4} sm={1}>\r\n              <Link to=\"/register\" style={{ textDecoration: 'none' }}>\r\n                <Button variant=\"contained\" color=\"secondary\" >\r\n                  Sign up\r\n              </Button>\r\n              </Link>\r\n            </Grid>}\r\n\r\n            {userFirstName !== 'Guest' && <Grid item xs={5} sm={1}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ fontSize: '15px', position: 'relative' }}\r\n                onClick={() => HandleLogout()} //מבצע התנתקות בלחיצה\r\n              >\r\n                logout\r\n            </Button>\r\n            </Grid>}\r\n            {userPremission === 1 && <AdminPanel />}\r\n            {userPremission !== 1 && windowSize !== 'xs' && <Grid item xs={9} sm={1}>\r\n              <img\r\n                src={'/Logo.jpg'}\r\n                style={{ width: '180px', zIndex: '15', position: 'relative', bottom: '30px' }}\r\n              />\r\n            </Grid>}\r\n            <Grid item sm={2}\r\n            onClick={() => cryptoSymbols()}            \r\n            >\r\n              <Button variant=\"contained\" style={{backgroundColor: 'green', color: 'white'}}>Crypto symbols</Button>\r\n            </Grid>\r\n            <Grid item sm={2}>\r\n              <Button variant=\"contained\" style={{backgroundColor: 'green', color: 'white'}}\r\n              onClick={() => bondsSymbols()}\r\n              >Bonds symbols</Button>\r\n            </Grid>\r\n            <Grid item sm={2}>\r\n              <Button variant=\"contained\" style={{backgroundColor: 'green', color: 'white'}}\r\n              onClick={() => comoditySymbols()}\r\n              >Comodity symbols</Button>\r\n            </Grid>\r\n            <Grid item sm={2}>\r\n              <Button variant=\"contained\" style={{backgroundColor: 'green', color: 'white'}}\r\n              onClick={() => stocksSymbols()}\r\n              >Stocks symbols</Button>\r\n            </Grid>\r\n            <Grid item sm={2}>\r\n              <Button variant=\"contained\" style={{backgroundColor: 'green', color: 'white'}}\r\n              onClick={() => pairsSymbols()}              \r\n              >Currency pair symbols</Button>\r\n            </Grid>\r\n            <Grid item sm={2}>\r\n              <Button variant=\"contained\" style={{backgroundColor: 'green', color: 'white', marginLeft: '40px'}}\r\n              onClick={() => pairsSymbols()}              \r\n              >Indexes symbols</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {userPremission === 0 &&\r\n        <PositionsTable\r\n          passEndDates={(endDatesArray) => getEndDateData(endDatesArray)}\r\n          reRender={reRenderTable}\r\n          PdfArray={(positionsArray) => downloadPdf(positionsArray)}\r\n        />}\r\n      {userPremission !== 1 && windowSize === 'xs' && <Grid item xs={9} sm={1}>\r\n        <img\r\n          src={'/Logo.jpg'}\r\n          style={{ width: '250px', zIndex: '15', position: 'relative', bottom: '0', top: '20px', left: '25%' }}\r\n        />\r\n      </Grid>}\r\n    </div>\r\n  );\r\n}\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\nimport './Login.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() { //פונקציית זכויות יוצרים\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://tradingandcoffee.com/\">\r\n        Trading & Coffee\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({ //סטיילינג\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() { //פונקצייה ראשית - התחברות\r\n  const classes = useStyles(); //סטיילינג לפי קלאסים\r\n  const [userName, setUserName] = useState([]);  //שם משתמש - אימייל\r\n  const [password, setPassword] = useState([]); // סיסמא\r\n  const history = useHistory(); // ריאקט הוקס - ראוטר\r\n\r\n\r\n  const HandleLogin = async (e) => { //פונקציית התחברות\r\n    try {\r\n      const login = await axios.post('/auth/login', { //API שמחבר את המשתמש\r\n        username: userName,\r\n        password: password\r\n    })\r\n    history.push(\"/\"); //אם המשתמש הצליח להתחבר מעביר אותו לדף הראשי\r\n    } catch {\r\n      alert('wrong username or password'); //אם המשתמש לא הצליח מציג הודעת שגיאה\r\n    };\r\n  };\r\n  \r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  return (\r\n    <div className=\"container-div\">\r\n      <Container component=\"main\" maxWidth=\"xs\" style={{backgroundColor: 'white'}}>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <div className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={({target: {value}}) => setUserName(value)} //שינוי שם המשתמש לפי הערך שהכניס\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={({target: {value}}) => setPassword(value)} //שינוי סיסמא לפי הערך שהכניס\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => HandleLogin()} //קריאה לפונקציית התחברות\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\" style={{position: 'relative', left: '90px'}}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <Copyright />\r\n        <h4 style={{textAlign: 'center'}}>\r\n         {<a href=\"https://wa.me/12407431840\">Contact through WhatsApp <WhatsAppIcon></WhatsAppIcon>+1-240-743-1840</a>}\r\n          </h4>\r\n          <img \r\n            src={'/Logo.jpg'}\r\n            style={{width: '300px', display: 'block', marginLeft: 'auto', marginRight: 'auto',position: 'relative',  bottom: '5px', zIndex: '15',}} \r\n          />  \r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './Register.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({ //יצירת סטיילינג\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 1),\r\n  },\r\n}));\r\n\r\nexport default function Register() { //פונקציה ראשית - הרשמה\r\n  const classes = useStyles(); //שימוש סטיילינג לפי קלאסים\r\n  const [firstName, setFirstName] = useState(); //סטייט שם פרטי\r\n  const [lastName, setlastName] = useState(); //סטייט שם משפחה\r\n  const [email, setEmail] = useState(); //סטייט אימייל\r\n  const [password, setPassword] = useState(); //סטייט סיסמא\r\n  const [checkBox, setCheckBox] = useState(false); //סטייט קריאת תנאי הרשמה\r\n  const [phoneNumber, setPhoneNumber] = useState();\r\n  const [confirmPass, setConfirmPass] = useState();\r\n  const [emailFlag, setEmailFlag] = useState(false);\r\n  const history = useHistory(); //ריאקט הוקס - ראוטר\r\n\r\n  const HandleRegister = async (e) => { //פונקציה שרושמת את המשתמש במערכת\r\n    try {\r\n      if (checkBox === true) { //במידה והמשתמש קרא את התנאים\r\n        if (confirmPass === password) { //מוודא שהסיסמא תואמת\r\n          if (emailFlag === true) {\r\n            const signup = await axios.post('/auth/signup', { //api רושם את המשתמש במערכת\r\n              firstName: firstName,\r\n              lastName: lastName,\r\n              phone: phoneNumber,\r\n              email: email,\r\n              password: password,\r\n            })\r\n            await axios.post('/emails/sendRegisterationMail', {\r\n              email: email,\r\n              username: email,\r\n              password: password\r\n            })\r\n            alert(signup.data.message);\r\n            if (signup.data.created === 'true') {\r\n              history.push(\"/login\"); //מעביר את המשתמש לעמוד התחברות במידה והוא נרשם בהצלחה\r\n            }\r\n          } else {\r\n            alert('email is not valid');\r\n          }\r\n        } else {\r\n          alert('Passwords does not match');\r\n        };\r\n      } else {\r\n        alert('you have to agree to the terms of service'); //הודעת שגיאה במידה והמשתמש לא קרא את התנאים\r\n      }\r\n    } catch {\r\n      alert('something went wrong'); //הודעת שגיאה במידה ומשהו השתבש בדרך\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (String(email).includes('@') === true) {\r\n      setEmailFlag(true);\r\n    }\r\n    else {\r\n      setEmailFlag(false);\r\n    };\r\n  }, [email])\r\n\r\n  return (\r\n    <div className=\"container-div\">\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <div className={classes.form} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  onChange={({ target: { value } }) => setFirstName(value)} //שינוי שם פרטי לפי הערך שהמשתמש בחר\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  onChange={({ target: { value } }) => setlastName(value)} //שינוי שם משפחה לפי הערך שהמשתמש בחר\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  onChange={({ target: { value } }) => setEmail(value)} //שינוי אימייל לפי הערך שהמשתמש בחר\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={({ target: { value } }) => setConfirmPass(value)} //שינוי סיסמא לפי הערך שהמשתמש בחר\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"confirm\"\r\n                  label=\"confirm password\"\r\n                  type=\"password\"\r\n                  id=\"confirm\"\r\n                  onChange={({ target: { value } }) => setPassword(value)} //שינוי סיסמא לפי הערך שהמשתמש בחר\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <PhoneInput\r\n                  style={{\r\n                    position: 'relative',\r\n                    margin: 'auto',\r\n                    width: '300px'\r\n                  }}\r\n                  country={'ee'}\r\n                  onChange={(phone) => setPhoneNumber(phone)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"false\" color=\"primary\" />}\r\n                  label=\"I have read and accept the Terms of service & Privacy policy.\"\r\n                  onClick={() => checkBox == true ? setCheckBox(false) : setCheckBox(true)} //שינוי סטייט שהמשתמש קרא את התנאים\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => HandleRegister()} //קריאה לפונקציית הרשמה\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"center\">\r\n              <Grid item  lg={7}>\r\n                  <Link style={{color: 'black', fontWeight: 'bold'}} href=\"https://docs.google.com/document/d/1xkG8ccYOo9-h1TdRxQP6MEkWzo4UotttVusHba8h2sU/edit\">Terms of services</Link>\r\n              </Grid>\r\n              <Grid item lg={3}>\r\n                  <Link style={{color: 'black', fontWeight: 'bold'}} href=\"https://docs.google.com/document/d/1YsQbDrYkuke9pX13NmyYDcb9l9kc7qe0wakAvKBeCJ8/edit\">Privacy policy</Link>\r\n              </Grid>\r\n              <br/>\r\n              <br/>\r\n\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\" style={{color: 'black', fontWeight: 'bold'}}>\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n        <h4 style={{ textAlign: 'center', position: 'relative', bottom: '10px' }}>\r\n          {<a href=\"https://wa.me/12407431840\" style={{color: 'black'}}>Contact through WhatsApp<WhatsAppIcon></WhatsAppIcon>+1-240-743-1840</a>}\r\n        </h4>\r\n        <Grid item xs={12}>\r\n          <img\r\n            src={'/Logo.jpg'}\r\n            style={{ width: '300px', display: 'block', marginLeft: 'auto', marginRight: 'auto', Index: '15', }}\r\n          />\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport axios from 'axios'\r\nimport './Contact.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({ //יצירת סטייל\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ContactPage() { //פונקציה ראשית - עמוד יצירת קשר\r\n  const classes = useStyles(); //שימוש בסטייל לפי קלאסים\r\n  const [fullName, setfullName] = React.useState(''); //סטייט שם מלא\r\n  const [email, setEmail] = React.useState(''); //סטייט אימייל\r\n  const [message, setMessage] = React.useState(''); //סטייט הודעה\r\n\r\n  const handleNameChange = (fullName) => { //פונקציה לשינוי השם\r\n    setfullName(fullName); //משנה את השם לפי הערך שהמשתמש הזין\r\n  };\r\n\r\n  const handleEmailChange = (email) => { //פונקציה לשינוי אימייל\r\n    setEmail(email); //משנה את האימייל לפי הערך שהמשתמש הזין\r\n  };\r\n\r\n  const handleMessageChange = (message) => { //שינוי ההודעוה\r\n    setMessage(message); //משנה את ההודעה לפי הערך שהמשתמש הזין\r\n  };\r\n\r\n  const sendEmail = async (fullName, email, message) => { //שליחת הודעה למערכת\r\n    try {\r\n      await axios.post('/emails/send', { //API שולח הודעה לדאטא בייס\r\n        fullName,\r\n        email,\r\n        message\r\n      })\r\n      alert('Your message has been sent successfully'); //הודעה שההודעה נשלחה בהצלחה\r\n      setEmail(''); //איפוס אימייל\r\n      setfullName(''); //איפוס שם מלא\r\n      setMessage(''); //איפוס ההודעה\r\n    } catch {\r\n      alert('Something went wrong please try again'); //במקרה של כשלון שולח הודעה שמשהו השתבש\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <div style={{ textAlign: 'center' }}>\r\n          <span className=\"fonted\" style={{ fontSize: '60px', position: 'relative', top: '20px' }}>Contact Us</span>\r\n          <br />\r\n          <br />\r\n          <span className=\"fonted2\" style={{ fontSize: '40px', position: 'relative', top: '20px' }}>We'd love to help!</span>\r\n          <br />\r\n          <br />\r\n          <span className=\"fonted2\" style={{ fontSize: '30px', position: 'relative', top: '20px' }}>we Suggest you to send us an Email or a message through Whatsapp</span>\r\n        </div>\r\n      </Grid>\r\n      <Grid container justify=\"flex-start\" alignItems=\"center\" direction=\"row\">\r\n        <div style={{ width: '40%', marginBottom: '200px' }}>\r\n          <Grid container justify=\"center\" alignItems=\"flex-end\" direction=\"column\">\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                style={{\r\n                  position: 'relative',\r\n                  top: '50px',\r\n                  width: '360px',\r\n                }}\r\n                id=\"fullName\"\r\n                label=\"Your full name\"\r\n                value={fullName}\r\n                placeholder=\"example: Nitai Luyckx\"\r\n                onChange={({ target: { value } }) => handleNameChange(value)} //קיראה לפונקציה שינוי שם עם הערך שנבחר\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                style={{\r\n                  position: 'relative',\r\n                  top: '50px',\r\n                  width: '360px'\r\n                }}\r\n                value={email}\r\n                id=\"email\"\r\n                label=\"Your email address\"\r\n                placeholder=\"example: customer@Trading&Coffee.com\"\r\n                variant=\"outlined\"\r\n                onChange={({ target: { value } }) => handleEmailChange(value)} //קיראה לפונקציה שינוי אימייל עם הערך שנבחר\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                style={{\r\n                  position: 'relative',\r\n                  top: '50px',\r\n                  width: '360px'\r\n                }}\r\n                id=\"message\"\r\n                label=\"Your message\"\r\n                multiline\r\n                value={message}\r\n                rows={10}\r\n                placeholder=\"example: I would love to buy some credits. how can i do that?\"\r\n                variant=\"outlined\"\r\n                onChange={({ target: { value } }) => handleMessageChange(value)} //קיראה לפונקציה שינוי הודעה עם הערך שנבחר\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{\r\n                  position: 'relative',\r\n                  top: '50px',\r\n                  width: '360px',\r\n                  left: '7px'\r\n                }}\r\n                onClick={() => sendEmail(fullName, email, message)}\r\n              >\r\n                <span className=\"fonted\">Send Email</span>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <Grid item xs={12} sm={6}>\r\n          <div style={{ margin: '0 auto', width: '100%', position: 'relative', bottom: '10px' }}>\r\n            <Grid container justify=\"flex-end\" alignItems=\"center\" direction=\"column\">\r\n              {/* <Grid item xs={12}>\r\n                <a href=\"https://www.google.co.il/maps/place/Nolimitz/@29.4238044,-98.4927114,18.3z\"\r\n                  rel=\"noreferrer\"\r\n                  target=\"_blank\"\r\n                  style={{ color: 'black' }}\r\n                >\r\n                  <LocationOnIcon style={{ fontSize: '50px', position: 'relative', top: '10px' }} />\r\n                  <span className=\"fonted3\" style={{ fontSize: '30px' }}>\r\n                    7292 Dictum Av.San Antonio\r\n                    </span>\r\n                </a>\r\n              </Grid> */}\r\n              <a href=\"https://wa.me/12407431840\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                style={{ color: 'black' }}\r\n              >\r\n                <WhatsAppIcon style={{ fontSize: '50px', position: 'relative', top: '10px', right: '80px', color: 'green'}} />\r\n                <span className=\"fonted3\" style={{ fontSize: '30px', position: 'relative', right: '70px' }}>\r\n                  Let's talk\r\n                  </span>\r\n              </a>\r\n              <a href=\"https://mail.google.com/mail/u/0/?fs=1&to=tradingandcoffeeapplication@gmail.com&su=SUBJECT&body=BODY&tf=cm\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                style={{ color: 'black' }}\r\n              >\r\n                <EmailIcon style={{ fontSize: '50px', position: 'relative', top: '10px', right: '60px', color: 'blue'}} />\r\n                <span className=\"fonted3\" style={{ fontSize: '30px', position: 'relative', right: '50px' }}>\r\n                  Send an Email\r\n                </span>\r\n              </a>\r\n            </Grid>\r\n          </div>\r\n          <img\r\n\r\n            src={'/Logo.jpg'}\r\n            alt=\"logo\"\r\n            style={{ width: '380px', position: 'relative', float: 'right', zIndex: '15', bottom: '20px' }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport axios from 'axios';\r\n\r\n// פונקה ראשית - פייפאל\r\nexport default function Paypal() {\r\n  const paypal = useRef(); // רפרנס של פייפאל\r\n  const [userDetails, setUserDetails] = useState({}); // פרטים של המשתמש\r\n  const history = useHistory(); // ריאקט הוקס - ראוטר\r\n\r\n  //כשהדף עולה\r\n  useEffect(async () => {\r\n    const userDetails = await axios.get('/auth/userDetails'); // מביא מידע על המשתמש\r\n    if (userDetails.firstName === 'Guest') { // אם המשתמש לא מחובר\r\n      history.push('/') //מעביר אותו לדף הראשי\r\n    }\r\n    setUserDetails(userDetails.data); // שומר את המידע בסטייט\r\n    window.paypal //אובייקט שפייפאל שמים על ווינדו\r\n      .Buttons({ //יצירת כפתור של פייפאל \r\n        createOrder: (data, actions, err) => {\r\n          return actions.order.create({ //יצירת הכפתור \r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"7 positions of any kinds\", //תיאור של המוצר - 7 פוזיציות\r\n                amount: {\r\n                  currency_code: \"USD\", //סוג מטבע לתשלום - דולר\r\n                  value: 30.0, // מחיר - 30\r\n                },\r\n              },\r\n            ],\r\n          });\r\n\r\n        },\r\n        onApprove: async (data, actions) => { //ברגע שההעברה התקבלה\r\n          const userDetails = await axios.get('/auth/userDetails'); //מוודא את המידע על המשתמש\r\n          const checkCredits = await axios.get(`/auth/getUserById/${userDetails.data._id}`) //בודק כמה קרדיטים יש למשתמש \r\n          const updatedCredits = checkCredits.data.credits + 7 // מוסיף למשתמש 7 קרדיטים\r\n          const addCredits = await axios.post('/auth/changeCredits', { //API שמשנה את הקרדיטים של המשתמש בדאטאבייס\r\n            email: userDetails.data.email, //האימייל של המשתמש\r\n            amount: updatedCredits //כמות הקרדיטים המעודכנת\r\n          })\r\n        },\r\n        onError: (err) => { // במידה ויש שגיאה\r\n          console.log(err); // מדפיס את השגיאה\r\n        },\r\n      })\r\n      .render(paypal.current); // רינדור של הכפתור\r\n\r\n    window.paypal //אובייקט שפייפאל שמים על ווינדו\r\n      .Buttons({  //יצירת כפתור של פייפאל \r\n        createOrder: (data, actions, err) => {\r\n          return actions.order.create({ //יצירת הכפתור \r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"15 positions of any kinds\", //תיאור של המוצר - 15 פוזיציות\r\n                amount: {\r\n                  currency_code: \"USD\", // מטבע - דולר\r\n                  value: 69.0, // מחיר - 69\r\n                },\r\n              },\r\n            ],\r\n          });\r\n\r\n        },\r\n        onApprove: async (data, actions) => { //ברגע שההעברה התקבלה\r\n          const userDetails = await axios.get('/auth/userDetails'); //מוודא את המידע על המשתמש\r\n          const checkCredits = await axios.get(`/auth/getUserById/${userDetails.data._id}`); //בודק כמה קרדיטים יש למשתמש \r\n          const updatedCredits = checkCredits.data.credits + 15 // מוסיף למשתמש 15 קרדיטים\r\n          const addCredits = await axios.post('/auth/changeCredits', { //API שמשנה את הקרדיטים של המשתמש בדאטאבייס\r\n            email: userDetails.data.email, //האימייל של המשתמש\r\n            amount: updatedCredits //כמות הקרדיטים המעודכנת\r\n          })\r\n        },\r\n        onError: (err) => { //במידה ויש שגיאה\r\n          console.log(err); // מדפיס את השגיאה\r\n        },\r\n      })\r\n      .render(paypal.current); // מרנדר את הכפתור של פייפאל\r\n\r\n    window.paypal //אובייקט שפייפאל שמים על ווינדו\r\n      .Buttons({  //יצירת כפתור של פייפאל\r\n        createOrder: (data, actions, err) => {\r\n          return actions.order.create({ //יצירת הכפתור \r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"22 positions of any kinds\", //תיאור של המוצר - 22 פוזיציות\r\n                amount: {\r\n                  currency_code: \"USD\",  // מטבע - דולר\r\n                  value: 99.0,// מחיר - 99\r\n                },\r\n              },\r\n            ],\r\n          });\r\n\r\n        },\r\n        onApprove: async (data, actions) => { //ברגע שההעברה התקבלה\r\n          const userDetails = await axios.get('/auth/userDetails'); //מוודא את המידע על המשתמש\r\n          const checkCredits = await axios.get(`/auth/getUserById/${userDetails.data._id}`); //בודק כמה קרדיטים יש למשתמש\r\n          const updatedCredits = checkCredits.data.credits + 22 // מוסיף למשתמש 22 קרדיטים\r\n          const addCredits = await axios.post('/auth/changeCredits', { //API שמשנה את הקרדיטים של המשתמש בדאטאבייס\r\n            email: userDetails.data.email, //האימייל של המשתמש\r\n            amount: updatedCredits //כמות הקרדיטים המעודכנת\r\n          })\r\n        },\r\n        onError: (err) => { //במידה ויש שגיאה\r\n          console.log(err); // מדפיס את השגיאה\r\n        },\r\n      })\r\n      .render(paypal.current); // מרדנדר את הכפתור של פייפאל\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1 style={{ fontSize: '50px' }}>Our Pricing</h1>\r\n      <h3>\r\n        Hello {userDetails.firstName}, welcome to our pricing page.\r\n            {<br />}\r\n             you can choose the plan that fits you the most and pay through paypal.\r\n             {<br />}\r\n            your credits will be updated as soon as your transection is complete.\r\n        </h3>\r\n      <div style={{ width: '450px', height: '400px', backgroundColor: 'lightblue', margin: 'auto' }}>\r\n        <h2 style={{ position: 'relative', top: '10px', marginLeft: '10px', float: 'left' }}>Basic offer: {<br />}30$ for{<br />} 7 positions</h2>\r\n        <h2 style={{ position: 'relative', bottom: '5px', marginRight: '200px', float: 'left' }}>Gold offer:{<br />} 69$ for {<br />}15 positions</h2>\r\n        <h2 style={{ position: 'relative', float: 'left', bottom: '20px' }}>Platinum offer:{<br />} 99$ for{<br />} 22 positions</h2>\r\n      </div>\r\n      <div ref={paypal} style={{ width: '50px', margin: 'auto', position: 'relative', left: '30px', bottom: '370px' }}>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from './components/HomePage';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Contact from './components/Contact';\nimport Payment from './components/Payment'\n\n\n\n\nfunction App() { //פונקציה ראשית - ריאקט ראוטר (מייצר עמודים שונים באתר)\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/payment\" component={Payment} />\n        <Route path=\"/\" component={HomePage} />\n      </Switch>\n    </Router>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}